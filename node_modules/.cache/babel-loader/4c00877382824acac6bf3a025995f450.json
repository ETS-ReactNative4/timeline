{"ast":null,"code":"import _classCallCheck from \"/Users/aylafernandes/Desktop/timeline/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aylafernandes/Desktop/timeline/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aylafernandes/Desktop/timeline/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aylafernandes/Desktop/timeline/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aylafernandes/Desktop/timeline/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aylafernandes/Desktop/timeline/src/components/layouts/CardGrid.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport EventCard from './EventCard';\nimport { Typography, Card, CardHeader } from '@material-ui/core';\nimport red from '@material-ui/core/colors/red';\n\nvar styles = function styles(theme) {\n  return {\n    layout: {\n      marginLeft: theme.spacing.unit * 1,\n      marginRight: theme.spacing.unit * 1\n    },\n    cardVazio: {\n      color: red[500],\n      paddingLeft: theme.spacing.unit * 1,\n      paddingRight: theme.spacing.unit * 1,\n      margin: theme.spacing.unit * 2\n    },\n    tabsContainer: {\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  };\n};\n\nvar CardGrid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CardGrid, _React$Component);\n\n  function CardGrid() {\n    _classCallCheck(this, CardGrid);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CardGrid).apply(this, arguments));\n  }\n\n  _createClass(CardGrid, [{\n    key: \"render\",\n\n    /*\r\n    state = {\r\n      eventos: {}\r\n    };\r\n    */\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          eventos = _this$props.eventos,\n          myCallbackOpenDialog = _this$props.myCallbackOpenDialog,\n          setEvento = _this$props.setEvento,\n          setEventos = _this$props.setEventos,\n          empresa = _this$props.empresa;\n      return React.createElement(\"div\", {\n        className: classNames(classes.layout),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        className: classNames(classes.tabsContainer),\n        container: true,\n        direction: \"column\",\n        justify: \"center\",\n        alignItems: \"center\",\n        item: true,\n        sm: 12,\n        md: 12,\n        lg: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, eventos.timeline ? eventos.timeline.map(function (evento, index) {\n        return React.createElement(EventCard, {\n          empresa: empresa,\n          evento: evento,\n          setEventos: setEventos,\n          key: index,\n          myCallbackOpenDialog: myCallbackOpenDialog,\n          setEvento: setEvento,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        });\n      }) : React.createElement(Card, {\n        className: classes.cardVazio,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        className: classes.cardVazio,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"N\\xE3o h\\xE1 eventos para este cliente\"))));\n    }\n  }]);\n\n  return CardGrid;\n}(React.Component);\n\nCardGrid.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CardGrid);","map":{"version":3,"sources":["/Users/aylafernandes/Desktop/timeline/src/components/layouts/CardGrid.js"],"names":["React","PropTypes","classNames","Grid","withStyles","EventCard","Typography","Card","CardHeader","red","styles","theme","layout","marginLeft","spacing","unit","marginRight","cardVazio","color","paddingLeft","paddingRight","margin","tabsContainer","CardGrid","props","classes","eventos","myCallbackOpenDialog","setEvento","setEventos","empresa","timeline","map","evento","index","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport EventCard from './EventCard';\r\nimport { Typography, Card, CardHeader } from '@material-ui/core';\r\nimport red from '@material-ui/core/colors/red';\r\nconst styles = theme => ({\r\n  layout: {\r\n    marginLeft: theme.spacing.unit * 1,\r\n    marginRight: theme.spacing.unit * 1\r\n  },\r\n\r\n  cardVazio: {\r\n    color: red[500],\r\n    paddingLeft: theme.spacing.unit * 1,\r\n    paddingRight: theme.spacing.unit * 1,\r\n    margin: theme.spacing.unit * 2\r\n  },\r\n  tabsContainer: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto'\r\n  }\r\n});\r\n\r\nclass CardGrid extends React.Component {\r\n  /*\r\n  state = {\r\n    eventos: {}\r\n  };\r\n\r\n*/\r\n  render() {\r\n    const {\r\n      classes,\r\n      eventos,\r\n      myCallbackOpenDialog,\r\n      setEvento,\r\n      setEventos,\r\n      empresa\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className={classNames(classes.layout)}>\r\n        {/* End hero unit */}\r\n\r\n        <Grid\r\n          className={classNames(classes.tabsContainer)}\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          item\r\n          sm={12}\r\n          md={12}\r\n          lg={6}\r\n        >\r\n          {eventos.timeline ? (\r\n            eventos.timeline.map((evento, index) => (\r\n              <EventCard\r\n                empresa={empresa}\r\n                evento={evento}\r\n                setEventos={setEventos}\r\n                key={index}\r\n                myCallbackOpenDialog={myCallbackOpenDialog}\r\n                setEvento={setEvento}\r\n              />\r\n            ))\r\n          ) : (\r\n            <Card className={classes.cardVazio}>\r\n              <Typography variant=\"h5\" className={classes.cardVazio}>\r\n                Não há eventos para este cliente\r\n              </Typography>\r\n            </Card>\r\n          )}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCardGrid.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CardGrid);\r\n"]},"metadata":{},"sourceType":"module"}