{"ast":null,"code":"import _classCallCheck from \"/Users/aylafernandes/Desktop/timeline/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aylafernandes/Desktop/timeline/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aylafernandes/Desktop/timeline/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aylafernandes/Desktop/timeline/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aylafernandes/Desktop/timeline/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aylafernandes/Desktop/timeline/src/components/layouts/CardGrid.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport EventCard from './EventCard';\nimport { Typography, Card, CardHeader } from '@material-ui/core';\nimport red from '@material-ui/core/colors/red';\n\nvar styles = function styles(theme) {\n  return {\n    layout: {\n      marginLeft: theme.spacing.unit * 1,\n      marginRight: theme.spacing.unit * 1\n    },\n    cardVazio: {\n      color: red[500],\n      paddingLeft: theme.spacing.unit * 1,\n      paddingRight: theme.spacing.unit * 1,\n      margin: theme.spacing.unit * 2\n    },\n    tabsContainer: {\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    }\n  };\n};\n\nvar CardGrid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CardGrid, _React$Component);\n\n  function CardGrid() {\n    _classCallCheck(this, CardGrid);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CardGrid).apply(this, arguments));\n  }\n\n  _createClass(CardGrid, [{\n    key: \"render\",\n\n    /*\r\n      state = {\r\n        eventos: {}\r\n      };\r\n    \r\n    */\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          eventos = _this$props.eventos,\n          myCallbackOpenDialog = _this$props.myCallbackOpenDialog,\n          setEvento = _this$props.setEvento,\n          setEventos = _this$props.setEventos,\n          empresa = _this$props.empresa;\n      return React.createElement(\"div\", {\n        className: classNames(classes.layout),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        className: classNames(classes.tabsContainer),\n        container: true,\n        direction: \"column\",\n        justify: \"center\",\n        alignItems: \"center\",\n        item: true,\n        sm: 12,\n        md: 12,\n        lg: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, eventos.timeline ? eventos.timeline.map(function (evento, index) {\n        return React.createElement(EventCard, {\n          empresa: empresa,\n          evento: evento,\n          setEventos: setEventos,\n          key: index,\n          myCallbackOpenDialog: myCallbackOpenDialog,\n          setEvento: setEvento,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      }) : React.createElement(Card, {\n        className: classes.cardVazio,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        className: classes.cardVazio,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"N\\xE3o h\\xE1 eventos para este cliente\"))));\n    }\n  }]);\n\n  return CardGrid;\n}(React.Component);\n\nCardGrid.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(CardGrid);","map":{"version":3,"sources":["/Users/aylafernandes/Desktop/timeline/src/components/layouts/CardGrid.js"],"names":["React","PropTypes","classNames","Grid","withStyles","EventCard","Typography","Card","CardHeader","red","styles","theme","layout","marginLeft","spacing","unit","marginRight","cardVazio","color","paddingLeft","paddingRight","margin","tabsContainer","CardGrid","props","classes","eventos","myCallbackOpenDialog","setEvento","setEventos","empresa","timeline","map","evento","index","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport EventCard from './EventCard'\r\nimport { Typography, Card, CardHeader } from '@material-ui/core';\r\nimport red from '@material-ui/core/colors/red';\r\nconst styles = theme => ({\r\n\r\n  layout: {\r\n    \r\n    marginLeft: theme.spacing.unit * 1,\r\n    marginRight: theme.spacing.unit * 1,\r\n  },\r\n   \r\n  cardVazio:{\r\n    color: red[500],\r\n    paddingLeft: theme.spacing.unit * 1,\r\n    paddingRight: theme.spacing.unit * 1,\r\n    margin: theme.spacing.unit * 2,\r\n  } ,\r\n  tabsContainer:{\r\n     marginLeft  : 'auto',\r\n     marginRight : 'auto',\r\n  }\r\n\r\n})\r\n\r\n \r\n\r\nclass CardGrid extends React.Component {\r\n/*\r\n  state = {\r\n    eventos: {}\r\n  };\r\n\r\n*/\r\n  render() {\r\n\r\n    const { classes, eventos, myCallbackOpenDialog, setEvento, setEventos, empresa } = this.props;\r\n   \r\n    return (<div className={classNames(classes.layout)}>\r\n      {/* End hero unit */}\r\n       \r\n       <Grid className={classNames(classes.tabsContainer)}  container direction=\"column\"  justify=\"center\" alignItems=\"center\"  item  sm={12} md={12} lg={6} >\r\n        {eventos.timeline?eventos.timeline.map((evento, index) => (\r\n            <EventCard empresa={empresa} evento={evento} setEventos={setEventos}  key={index} myCallbackOpenDialog={myCallbackOpenDialog} setEvento={setEvento} />\r\n        )): \r\n        <Card className={classes.cardVazio}>\r\n         \r\n            <Typography variant=\"h5\" className={classes.cardVazio} >\r\n              Não há eventos para este cliente\r\n            </Typography>\r\n          \r\n        </Card>\r\n        }\r\n      </Grid>\r\n    </div>)\r\n  }\r\n}\r\n\r\nCardGrid.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(CardGrid);"]},"metadata":{},"sourceType":"module"}